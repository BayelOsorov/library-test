[{"/home/nurlan/Desktop/crud-redux-library/src/index.js":"1","/home/nurlan/Desktop/crud-redux-library/src/App.js":"2","/home/nurlan/Desktop/crud-redux-library/src/redux/store.js":"3","/home/nurlan/Desktop/crud-redux-library/src/redux/root-reducer.js":"4","/home/nurlan/Desktop/crud-redux-library/src/redux/reducer.js":"5","/home/nurlan/Desktop/crud-redux-library/src/MyRoutes.js":"6","/home/nurlan/Desktop/crud-redux-library/src/pages/MainPage.jsx":"7","/home/nurlan/Desktop/crud-redux-library/src/redux/actionsType.js":"8","/home/nurlan/Desktop/crud-redux-library/src/redux/actions.js":"9","/home/nurlan/Desktop/crud-redux-library/src/pages/AddUser.jsx":"10","/home/nurlan/Desktop/crud-redux-library/src/pages/EditUser.jsx":"11","/home/nurlan/Desktop/crud-redux-library/src/components/MyNavbar.jsx":"12","/home/nurlan/Desktop/crud-redux-library/src/pages/CartPage.jsx":"13","/home/nurlan/Desktop/crud-redux-library/src/redux/cart-actions.js":"14","/home/nurlan/Desktop/crud-redux-library/src/utils/calcPrice.js":"15","/home/nurlan/Desktop/crud-redux-library/src/axiosConfig.js":"16"},{"size":376,"mtime":1651660368082,"results":"17","hashOfConfig":"18"},{"size":148,"mtime":1651647250665,"results":"19","hashOfConfig":"18"},{"size":379,"mtime":1651658019760,"results":"20","hashOfConfig":"18"},{"size":175,"mtime":1651810104699,"results":"21","hashOfConfig":"18"},{"size":1027,"mtime":1651811180078,"results":"22","hashOfConfig":"18"},{"size":676,"mtime":1651811934164,"results":"23","hashOfConfig":"18"},{"size":5489,"mtime":1651810327380,"results":"24","hashOfConfig":"18"},{"size":1299,"mtime":1651811077046,"results":"25","hashOfConfig":"18"},{"size":1850,"mtime":1651810144812,"results":"26","hashOfConfig":"18"},{"size":3200,"mtime":1651807991532,"results":"27","hashOfConfig":"18"},{"size":3521,"mtime":1651805561247,"results":"28","hashOfConfig":"18"},{"size":6684,"mtime":1651809387363,"results":"29","hashOfConfig":"18"},{"size":8347,"mtime":1651812290392,"results":"30","hashOfConfig":"18"},{"size":3277,"mtime":1651812247118,"results":"31","hashOfConfig":"18"},{"size":237,"mtime":1651811344512,"results":"32","hashOfConfig":"18"},{"size":357,"mtime":1651812177064,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","suppressedMessages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"10444gp",{"filePath":"37","messages":"38","suppressedMessages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"41","messages":"42","suppressedMessages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"44","messages":"45","suppressedMessages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"47","messages":"48","suppressedMessages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"50","messages":"51","suppressedMessages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"53","messages":"54","suppressedMessages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56"},{"filePath":"57","messages":"58","suppressedMessages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"60","messages":"61","suppressedMessages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"63","messages":"64","suppressedMessages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"66","messages":"67","suppressedMessages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69"},{"filePath":"70","messages":"71","suppressedMessages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"73","messages":"74","suppressedMessages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76"},{"filePath":"77","messages":"78","suppressedMessages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80"},{"filePath":"81","messages":"82","suppressedMessages":"83","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"84","messages":"85","suppressedMessages":"86","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/nurlan/Desktop/crud-redux-library/src/index.js",[],[],"/home/nurlan/Desktop/crud-redux-library/src/App.js",[],[],[],"/home/nurlan/Desktop/crud-redux-library/src/redux/store.js",[],[],"/home/nurlan/Desktop/crud-redux-library/src/redux/root-reducer.js",[],[],"/home/nurlan/Desktop/crud-redux-library/src/redux/reducer.js",[],[],"/home/nurlan/Desktop/crud-redux-library/src/MyRoutes.js",[],[],"/home/nurlan/Desktop/crud-redux-library/src/pages/MainPage.jsx",["87","88","89","90","91"],[],"import React, { useEffect } from \"react\";\nimport { styled } from \"@mui/material/styles\";\nimport Table from \"@mui/material/Table\";\nimport TableBody from \"@mui/material/TableBody\";\nimport TableCell, { tableCellClasses } from \"@mui/material/TableCell\";\nimport TableContainer from \"@mui/material/TableContainer\";\nimport TableHead from \"@mui/material/TableHead\";\nimport TableRow from \"@mui/material/TableRow\";\nimport Paper from \"@mui/material/Paper\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { deleteUsers, loadUsers } from \"./../redux/actions\";\nimport { Button, ButtonGroup } from \"@mui/material\";\nimport { display, margin } from \"@mui/system\";\nimport { useNavigate } from \"react-router-dom\";\n\n// const useStyles = makeStyles((theme) => {\n//   root: {\n//     display: \"flex\";\n//     flexDirection: \"column\";\n//     alignItems: \"center\";\n//     '&>*':\n//       {\n//         margin: theme.spacing(1),\n//       };\n//   }\n// });\n\nconst MainPage = () => {\n  //   const buttonStyles = useStyles();\n\n  const StyledTableCell = styled(TableCell)(({ theme }) => ({\n    [`&.${tableCellClasses.head}`]: {\n      backgroundColor: theme.palette.common.black,\n      color: theme.palette.common.white,\n    },\n    [`&.${tableCellClasses.body}`]: {\n      fontSize: 14,\n    },\n  }));\n\n  const StyledTableRow = styled(TableRow)(({ theme }) => ({\n    \"&:nth-of-type(odd)\": {\n      backgroundColor: theme.palette.action.hover,\n    },\n    // hide last border\n    \"&:last-child td, &:last-child th\": {\n      border: 0,\n    },\n  }));\n\n  function createData(name, calories, fat, carbs, protein) {\n    return { name, calories, fat, carbs, protein };\n  }\n\n  //   const rows = [\n  //     createData(\"Frozen yoghurt\", 159, 6.0, 24, 4.0),\n  //     createData(\"Ice cream sandwich\", 237, 9.0, 37, 4.3),\n  //     createData(\"Eclair\", 262, 16.0, 24, 6.0),\n  //     createData(\"Cupcake\", 305, 3.7, 67, 4.3),\n  //     createData(\"Gingerbread\", 356, 16.0, 49, 3.9),\n  //   ];\n\n  //\n  let dispatch = useDispatch();\n  const { users } = useSelector((state) => state.data);\n  useEffect(() => {\n    dispatch(loadUsers());\n  }, []);\n  const handleDelete = (id) => {\n    if (window.confirm(\"Are you sure wanted to delete the user?\")) {\n      dispatch(deleteUsers(id));\n    }\n  };\n  let navigate = useNavigate();\n\n  return (\n    <div>\n      <div\n        style={{\n          display: \"flex\",\n          flexDirection: \"column\",\n          alignItems: \"center\",\n        }}\n      >\n        <Button\n          style={{ margin: \"50px\" }}\n          onClick={() => navigate(\"/addUser\")}\n          variant=\"contained\"\n          color=\"primary\"\n        >\n          Add book\n        </Button>\n      </div>\n\n      <TableContainer component={Paper}>\n        <Table sx={{ minWidth: 700 }} aria-label=\"customized table\">\n          <TableHead>\n            <TableRow>\n              <StyledTableCell>Name</StyledTableCell>\n              <StyledTableCell align=\"center\">Image</StyledTableCell>\n              <StyledTableCell align=\"center\">Contact</StyledTableCell>\n              <StyledTableCell align=\"center\">Author</StyledTableCell>\n              <StyledTableCell align=\"center\">Category</StyledTableCell>\n              <StyledTableCell align=\"center\">Action</StyledTableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {users &&\n              users.map((user) => (\n                <StyledTableRow key={user.id}>\n                  <StyledTableCell component=\"th\" scope=\"row\">\n                    {user.name}\n                  </StyledTableCell>\n                  <StyledTableCell align=\"center\">\n                    <img\n                      style={{ width: \"200px\", height: \"200px\" }}\n                      src={user.image}\n                    />\n                  </StyledTableCell>\n                  <StyledTableCell align=\"center\">\n                    {user.contact}\n                  </StyledTableCell>\n                  <StyledTableCell align=\"center\">\n                    {user.address}\n                  </StyledTableCell>\n                  <StyledTableCell align=\"center\">\n                    {user.category}\n                  </StyledTableCell>\n\n                  <StyledTableCell align=\"center\">\n                    <ButtonGroup\n                      variant=\"container\"\n                      aria-label=\"contained \n                      primary\n                      button group\"\n                    >\n                      <Button\n                        style={{ background: \"red\" }}\n                        color=\"secondary\"\n                        onClick={() => handleDelete(user.id)}\n                      >\n                        Delete\n                      </Button>\n                      <Button\n                        style={{ background: \"blue\" }}\n                        color=\"primary\"\n                        onClick={() => navigate(`/editUser/${user.id}`)}\n                      >\n                        Edit\n                      </Button>\n                      <Button\n                        style={{ background: \"green\" }}\n                        color=\"primary\"\n                        onClick={() => navigate(`/editUser/${user.id}`)}\n                      >\n                        Add to cart\n                      </Button>\n                    </ButtonGroup>\n                  </StyledTableCell>\n                </StyledTableRow>\n              ))}\n          </TableBody>\n        </Table>\n      </TableContainer>\n    </div>\n  );\n};\n\nexport default MainPage;\n","/home/nurlan/Desktop/crud-redux-library/src/redux/actionsType.js",[],[],"/home/nurlan/Desktop/crud-redux-library/src/redux/actions.js",[],[],"/home/nurlan/Desktop/crud-redux-library/src/pages/AddUser.jsx",[],[],"/home/nurlan/Desktop/crud-redux-library/src/pages/EditUser.jsx",["92"],[],"import React, { useState, useEffect } from \"react\";\nimport Box from \"@mui/material/Box\";\nimport TextField from \"@mui/material/TextField\";\nimport { Button } from \"@mui/material\";\nimport { useNavigate, useParams } from \"react-router-dom\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { getSingleUser, updateUser } from \"redux/actions\";\n\nconst EditUser = () => {\n  const navigate = useNavigate();\n  const dispatch = useDispatch();\n  const { id } = useParams();\n  const { user } = useSelector((state) => state.data);\n  const [state, setState] = useState({\n    name: \"\",\n    image: \"\",\n    contact: \"\",\n    address: \"\",\n    category: \"\",\n  });\n  const [error, setError] = useState(\"\");\n  const { name, image, contact, address, category } = state;\n  useEffect(() => {\n    dispatch(getSingleUser(id));\n  }, []);\n\n  useEffect(() => {\n    if (user) {\n      setState({ ...user });\n    }\n  }, [user]);\n\n  const handleInputChange = (e) => {\n    let { name, value } = e.target;\n    setState({ ...state, [name]: value });\n  };\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    if (!name || !address || !image || !contact || !category) {\n      setError(\"please input all input field\");\n    } else {\n      dispatch(updateUser(state, id));\n      navigate(\"/\");\n      setError(\"\");\n    }\n  };\n  return (\n    <div\n      style={{\n        display: \"flex\",\n        justifyContent: \"center\",\n        alignItems: \"center\",\n        flexDirection: \"column\",\n      }}\n    >\n      <Button\n        variant=\"contained\"\n        color=\"secondary\"\n        type=\"submit\"\n        onClick={() => navigate(\"/\")}\n      >\n        Go back\n      </Button>\n      <h3>Edit user </h3>\n      {error && <h3 style={{ color: \"red\" }}>{error}</h3>}\n      <Box\n        onSubmit={handleSubmit}\n        style={{\n          display: \"flex\",\n          justifyContent: \"center\",\n          alignItems: \"center\",\n          flexDirection: \"column\",\n        }}\n        component=\"form\"\n        sx={{\n          \"& > :not(style)\": { m: 1, width: \"25ch\" },\n        }}\n        noValidate\n        autoComplete=\"off\"\n      >\n        <TextField\n          id=\"standard-basic\"\n          label=\"name\"\n          variant=\"standard\"\n          value={name || \"\"}\n          type=\"text\"\n          name=\"name\"\n          onChange={handleInputChange}\n        />\n        <br />\n        <TextField\n          id=\"standard-basic\"\n          label=\"image\"\n          variant=\"standard\"\n          value={image || \"\"}\n          type=\"image\"\n          name=\"image\"\n          onChange={handleInputChange}\n        />\n        <br />\n        <TextField\n          id=\"standard-basic\"\n          label=\"contact\"\n          variant=\"standard\"\n          value={contact || \"\"}\n          type=\"number\"\n          name=\"contact\"\n          onChange={handleInputChange}\n        />\n        <br />\n\n        <TextField\n          id=\"standard-basic\"\n          label=\"address\"\n          variant=\"standard\"\n          value={address || \"\"}\n          type=\"text\"\n          name=\"address\"\n          onChange={handleInputChange}\n        />\n        <TextField\n          id=\"standard-basic\"\n          label=\"category\"\n          variant=\"standard\"\n          value={category}\n          type=\"text\"\n          name=\"category\"\n          onChange={handleInputChange}\n        />\n        <Button\n          variant=\"contained\"\n          color=\"primary\"\n          type=\"submit\"\n          onChange={handleInputChange}\n        >\n          Submit\n        </Button>\n      </Box>\n    </div>\n  );\n};\n\nexport default EditUser;\n","/home/nurlan/Desktop/crud-redux-library/src/components/MyNavbar.jsx",[],[],"/home/nurlan/Desktop/crud-redux-library/src/pages/CartPage.jsx",["93","94","95","96","97","98","99","100","101","102","103","104","105"],[],"import React, { useContext, useEffect, useState } from \"react\";\nimport { useParams } from \"react-router\";\n// snack\nimport Stack from \"@mui/material/Stack\";\nimport Snackbar from \"@mui/material/Snackbar\";\nimport MuiAlert from \"@mui/material/Alert\";\nimport { Button, Rating } from \"@mui/material\";\nimport { Link } from \"react-router-dom\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {\n  addAndDeleteProductInCart,\n  addAndDeleteProductInFavorites,\n  checkFavoriteInFavorites,\n  checkProductInCart,\n  getDetail,\n} from \"../redux/cart-actions\";\nconst Alert = React.forwardRef(function Alert(props, ref) {\n  return <MuiAlert elevation={6} ref={ref} variant=\"filled\" {...props} />;\n});\n\nconst CartPage = () => {\n  const params = useParams();\n  let user = JSON.parse(localStorage.getItem(\"users\"));\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(getDetail(params.id));\n  }, []);\n  const detailProduct = useSelector(\n    (state) => state.userProducts.productDetails\n  );\n  // snackbar\n  const [open, setOpen] = React.useState(false);\n\n  const handleClick = () => {\n    setOpen(true);\n  };\n\n  const handleClose = (event, reason) => {\n    if (reason === \"clickaway\") {\n      return;\n    }\n\n    setOpen(false);\n  };\n  //  error snack\n  const [open1, setOpen1] = React.useState(false);\n\n  const handleClick1 = () => {\n    setOpen1(true);\n  };\n\n  const handleClose1 = (event, reason) => {\n    if (reason === \"clickaway\") {\n      return;\n    }\n\n    setOpen1(false);\n  };\n  const [open3, setOpen3] = React.useState(false);\n\n  const handleClick3 = () => {\n    setOpen3(true);\n  };\n\n  const handleClose3 = (event, reason) => {\n    if (reason === \"clickaway\") {\n      return;\n    }\n\n    setOpen3(false);\n  };\n  const [open4, setOpen4] = React.useState(false);\n\n  const handleClick4 = () => {\n    setOpen4(true);\n  };\n\n  const handleClose4 = (event, reason) => {\n    if (reason === \"clickaway\") {\n      return;\n    }\n\n    setOpen4(false);\n  };\n\n  // !Rating\n\n  // let sum = 0\n  // if (ratings) {\n  //     ratings.map((item) => {\n  //         sum += +item.rate\n  //     })\n  //     sum = sum / ratings.length\n  // }\n\n  // !\n\n  // let countOfLike = 0\n  // if (likes) {\n  //     likes.map((item) => {\n  //         countOfLike += item.likeCount\n  //     })\n  // }\n  // const { addBrowsing } = useContext(browsingContext)\n  // useEffect(() => {\n  //     addBrowsing(params.id, user.username)\n\n  // }, [])\n\n  return (\n    <>\n      <Stack spacing={2} sx={{ width: \"100%\" }}>\n        <Snackbar open={open} autoHideDuration={2000} onClose={handleClose}>\n          <Alert\n            onClose={handleClose}\n            severity=\"success\"\n            sx={{ width: \"100%\" }}\n          >\n            Добавлено в корзину\n          </Alert>\n        </Snackbar>\n      </Stack>\n\n      <Stack spacing={2} sx={{ width: \"100%\" }}>\n        <Snackbar open={open1} autoHideDuration={2000} onClose={handleClose1}>\n          <Alert severity=\"error\">Удалено из корзины</Alert>\n        </Snackbar>\n      </Stack>\n      <Stack spacing={2} sx={{ width: \"100%\" }}>\n        <Snackbar open={open3} autoHideDuration={2000} onClose={handleClose3}>\n          <Alert\n            onClose={handleClose}\n            severity=\"success\"\n            sx={{ width: \"100%\" }}\n          >\n            Добавлено в избранное\n          </Alert>\n        </Snackbar>\n      </Stack>\n\n      <Stack spacing={2} sx={{ width: \"100%\" }}>\n        <Snackbar open={open4} autoHideDuration={2000} onClose={handleClose4}>\n          <Alert severity=\"error\">Удалено из избранных</Alert>\n        </Snackbar>\n      </Stack>\n      <div className=\"detail-page\">\n        {detailProduct ? (\n          <div className=\"details\" key={detailProduct.id}>\n            <div className=\"big-img\">\n              <img src={detailProduct.image} alt=\"\" />\n            </div>\n\n            <div className=\"box\">\n              <div className=\"row\">\n                <h2>{detailProduct.name}</h2>\n                <span>{detailProduct.price}c</span>\n              </div>\n              {/* <Rating\n                                    precision={0.5} value={sum}\n                                    name=\"simple-controlled\"\n                                    readOnly\n                                /> */}\n              <p>Бренд: {detailProduct.brand}</p>\n\n              <p>{detailProduct.description}</p>\n              <Link to=\"/products\">\n                <Button style={{ display: \"block\" }}>to products</Button>\n              </Link>\n              <Link to=\"/order\">\n                <Button style={{ display: \"block\" }}>buy now</Button>\n              </Link>\n              {/* {\n                                    checkProductInCart(detailProduct.id) ? (\n                                        <Button\n                                            onClick={() => {\n                                                addAndDeleteProductInCart(detailProduct)\n                                                handleClick1()\n                                            }}\n                                            className='shop-btn' color='error' variant='outlined' size=\"large\">\n                                            Удалить из корзины\n                                        </Button>\n\n                                    ) : (\n                                        <Button\n                                            onClick={() => {\n                                                addAndDeleteProductInCart(detailProduct)\n                                                handleClick()\n                                            }}\n                                            className='shop-btn' color='success' variant='outlined' size=\"large\">\n                                            Добавить в корзину\n                                        </Button>\n                                    )\n                                }\n                                {\n                                    checkFavoriteInFavorites(detailProduct.id) ? (\n                                        <Button\n                                            onClick={() => {\n                                                addAndDeleteProductInFavorites(detailProduct)\n                                                handleClick4()\n\n                                            }}\n                                            className='shop-btn' color='error' variant='outlined' size=\"large\">\n                                            Удалить из избранных\n                                        </Button>\n\n                                    ) : (\n                                        <Button\n                                            onClick={() => {\n                                                addAndDeleteProductInFavorites(detailProduct)\n                                                handleClick3()\n\n                                            }}\n                                            className='shop-btn' color='success' variant='outlined' size=\"large\">\n                                            Добавить в избранное\n                                        </Button>\n                                    )\n                                } */}\n              <div className=\"my-rate\">\n                {/* {\n                                        !user || user.username === 'guest' ? (\n                                            <Link to='/register' >\n                                                <h5 className='login-to' >Войдите чтобы оставить лайк и рейтинг </h5>\n                                            </Link>\n                                        ) : (\n                                            <>\n                                                <MyRating />\n                                                {countOfLike !== 0 ? countOfLike : null}\n                                                <MyLikes />\n                                            </>\n\n                                        )\n                                    } */}\n              </div>\n            </div>\n          </div>\n        ) : (\n          <h2>Loading...</h2>\n        )}\n      </div>\n    </>\n  );\n};\n\nexport default CartPage;\n","/home/nurlan/Desktop/crud-redux-library/src/redux/cart-actions.js",["106","107","108","109","110"],[],"import axios from \"axios\";\nimport $axios from \"./../axiosConfig\";\nimport jwt_decode from \"jwt-decode\";\nimport { CalcSubPrice, calcTotalPrice } from \"../utils/calcPrice\";\nimport {\n  ADD_AND_DELETE_CART,\n  ADD_AND_DELETE_FAVORITES,\n  CLEAR_COUNT_OF_CART,\n  GET_CART,\n  GET_FAVORITES,\n  USER_GET_COUNT,\n  USER_GET_DETAIL,\n  USER_GET_PRODUCT,\n} from \"./actionsType\";\nconst API = \"http://localhost:4000/user\";\n\nexport const getProducts = (page = \"1\") => {\n  return async (dispatch) => {\n    try {\n      let filter = window.location.search;\n      let filter1 = window.location.search;\n\n      if (filter) filter += `&page=${page}`;\n      else filter += `?page=${page}`;\n\n      const { data } = await $axios(`products/${filter}`);\n      if (filter1) filter1 += \"&limit=10000\";\n      else filter1 += \"?limit=10000\";\n\n      const response = await $axios(`products/${filter1}`);\n      dispatch({\n        type: USER_GET_COUNT,\n        payload: response.data.rows.length,\n      });\n      let action = {\n        type: USER_GET_PRODUCT,\n        payload: data.rows,\n      };\n      dispatch(action);\n    } catch (e) {\n      console.log(e);\n    }\n  };\n};\nexport const getDetail = (id) => {\n  return async (dispatch) => {\n    const { data } = await $axios(\"/products/\" + id);\n    dispatch({\n      type: USER_GET_DETAIL,\n      payload: data,\n    });\n  };\n};\n\n// ! cart\nexport const addAndDeleteProductInCart = (product1) => {\n  let cart = JSON.parse(localStorage.getItem(\"cart\"));\n  if (!cart) {\n    cart = {\n      products: [],\n      totalPrice: 0,\n    };\n  }\n  let product = {\n    product1: product1,\n    count: 1,\n    subPrice: 0,\n  };\n  product.subPrice = CalcSubPrice(product);\n  let checkArr = cart.products.filter((item) => {\n    return item.product1.id === product1.id;\n  });\n  if (checkArr.length === 0) {\n    cart.products.push(product);\n  } else {\n    cart.products = cart.products.filter((item) => {\n      return item.product1.id !== product1.id;\n    });\n  }\n  cart.totalPrice = calcTotalPrice(cart);\n  localStorage.setItem(\"cart\", JSON.stringify(cart));\n  return {\n    type: ADD_AND_DELETE_CART,\n    payload: cart.products.length,\n  };\n};\nexport const checkProductInCart = (id) => {\n  let cart = JSON.parse(localStorage.getItem(\"cart\"));\n  if (!cart) {\n    cart = {\n      products: [],\n      totalPrice: 0,\n    };\n  }\n  let checkArr = cart.products.filter((item) => {\n    return item.product1.id === id;\n  });\n  if (checkArr.length === 0) {\n    return false;\n  } else {\n    return true;\n  }\n};\nexport const getCart = () => {\n  let cart = JSON.parse(localStorage.getItem(\"cart\"));\n  return {\n    type: GET_CART,\n    payload: cart,\n  };\n};\nexport const changeCountProduct = (count, id) => {\n  if (count < 1) {\n    return;\n  }\n  let cart = JSON.parse(localStorage.getItem(\"cart\"));\n  if (!cart) {\n    cart = {\n      products: [],\n      totalPrice: 0,\n    };\n  }\n  cart.products = cart.products.map((item) => {\n    if (item.product1.id === id) {\n      item.count = count;\n      item.subPrice = CalcSubPrice(item);\n    }\n    return item;\n  });\n  cart.totalPrice = calcTotalPrice(cart);\n  localStorage.setItem(\"cart\", JSON.stringify(cart));\n\n  getCart();\n};\n// Clear count of cart\nexport const clearCountOfCart = () => {\n  return {\n    type: CLEAR_COUNT_OF_CART,\n    payload: null,\n  };\n};\n","/home/nurlan/Desktop/crud-redux-library/src/utils/calcPrice.js",[],[],"/home/nurlan/Desktop/crud-redux-library/src/axiosConfig.js",[],[],{"ruleId":"111","severity":1,"message":"112","line":13,"column":10,"nodeType":"113","messageId":"114","endLine":13,"endColumn":17},{"ruleId":"111","severity":1,"message":"115","line":13,"column":19,"nodeType":"113","messageId":"114","endLine":13,"endColumn":25},{"ruleId":"111","severity":1,"message":"116","line":51,"column":12,"nodeType":"113","messageId":"114","endLine":51,"endColumn":22},{"ruleId":"117","severity":1,"message":"118","line":68,"column":6,"nodeType":"119","endLine":68,"endColumn":8,"suggestions":"120"},{"ruleId":"121","severity":1,"message":"122","line":115,"column":21,"nodeType":"123","endLine":118,"endColumn":23},{"ruleId":"117","severity":1,"message":"124","line":25,"column":6,"nodeType":"119","endLine":25,"endColumn":8,"suggestions":"125"},{"ruleId":"111","severity":1,"message":"126","line":1,"column":17,"nodeType":"113","messageId":"114","endLine":1,"endColumn":27},{"ruleId":"111","severity":1,"message":"127","line":1,"column":40,"nodeType":"113","messageId":"114","endLine":1,"endColumn":48},{"ruleId":"111","severity":1,"message":"128","line":7,"column":18,"nodeType":"113","messageId":"114","endLine":7,"endColumn":24},{"ruleId":"111","severity":1,"message":"129","line":11,"column":3,"nodeType":"113","messageId":"114","endLine":11,"endColumn":28},{"ruleId":"111","severity":1,"message":"130","line":12,"column":3,"nodeType":"113","messageId":"114","endLine":12,"endColumn":33},{"ruleId":"111","severity":1,"message":"131","line":13,"column":3,"nodeType":"113","messageId":"114","endLine":13,"endColumn":27},{"ruleId":"111","severity":1,"message":"132","line":14,"column":3,"nodeType":"113","messageId":"114","endLine":14,"endColumn":21},{"ruleId":"111","severity":1,"message":"133","line":23,"column":7,"nodeType":"113","messageId":"114","endLine":23,"endColumn":11},{"ruleId":"117","severity":1,"message":"134","line":27,"column":6,"nodeType":"119","endLine":27,"endColumn":8,"suggestions":"135"},{"ruleId":"111","severity":1,"message":"136","line":34,"column":9,"nodeType":"113","messageId":"114","endLine":34,"endColumn":20},{"ruleId":"111","severity":1,"message":"137","line":48,"column":9,"nodeType":"113","messageId":"114","endLine":48,"endColumn":21},{"ruleId":"111","severity":1,"message":"138","line":61,"column":9,"nodeType":"113","messageId":"114","endLine":61,"endColumn":21},{"ruleId":"111","severity":1,"message":"139","line":74,"column":9,"nodeType":"113","messageId":"114","endLine":74,"endColumn":21},{"ruleId":"111","severity":1,"message":"140","line":1,"column":8,"nodeType":"113","messageId":"114","endLine":1,"endColumn":13},{"ruleId":"111","severity":1,"message":"141","line":3,"column":8,"nodeType":"113","messageId":"114","endLine":3,"endColumn":18},{"ruleId":"111","severity":1,"message":"142","line":7,"column":3,"nodeType":"113","messageId":"114","endLine":7,"endColumn":27},{"ruleId":"111","severity":1,"message":"143","line":10,"column":3,"nodeType":"113","messageId":"114","endLine":10,"endColumn":16},{"ruleId":"111","severity":1,"message":"144","line":15,"column":7,"nodeType":"113","messageId":"114","endLine":15,"endColumn":10},"no-unused-vars","'display' is defined but never used.","Identifier","unusedVar","'margin' is defined but never used.","'createData' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["145"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","React Hook useEffect has missing dependencies: 'dispatch' and 'id'. Either include them or remove the dependency array.",["146"],"'useContext' is defined but never used.","'useState' is defined but never used.","'Rating' is defined but never used.","'addAndDeleteProductInCart' is defined but never used.","'addAndDeleteProductInFavorites' is defined but never used.","'checkFavoriteInFavorites' is defined but never used.","'checkProductInCart' is defined but never used.","'user' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'dispatch' and 'params.id'. Either include them or remove the dependency array.",["147"],"'handleClick' is assigned a value but never used.","'handleClick1' is assigned a value but never used.","'handleClick3' is assigned a value but never used.","'handleClick4' is assigned a value but never used.","'axios' is defined but never used.","'jwt_decode' is defined but never used.","'ADD_AND_DELETE_FAVORITES' is defined but never used.","'GET_FAVORITES' is defined but never used.","'API' is assigned a value but never used.",{"desc":"148","fix":"149"},{"desc":"150","fix":"151"},{"desc":"152","fix":"153"},"Update the dependencies array to be: [dispatch]",{"range":"154","text":"155"},"Update the dependencies array to be: [dispatch, id]",{"range":"156","text":"157"},"Update the dependencies array to be: [dispatch, params.id]",{"range":"158","text":"159"},[2101,2103],"[dispatch]",[818,820],"[dispatch, id]",[905,907],"[dispatch, params.id]"]