{"ast":null,"code":"import * as types from \"./actionsType\";\nconst initialState = {\n  users: [],\n  user: {},\n  loading: true\n};\n\nconst usersReducers = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case types.GET_USERS:\n      return { ...state,\n        users: action.payload,\n        loading\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default usersReducers;","map":{"version":3,"names":["types","initialState","users","user","loading","usersReducers","state","action","type","GET_USERS","payload"],"sources":["/home/nurlan/Desktop/crud-redux-library/src/redux/reducer.js"],"sourcesContent":["import * as types from \"./actionsType\";\n\nconst initialState = { users: [], user: {}, loading: true };\n\nconst usersReducers = (state = initialState, action) => {\n  switch (action.type) {\n    case types.GET_USERS:\n      return { ...state, users: action.payload, loading };\n    default:\n      return state;\n  }\n};\n\nexport default usersReducers;\n"],"mappings":"AAAA,OAAO,KAAKA,KAAZ,MAAuB,eAAvB;AAEA,MAAMC,YAAY,GAAG;EAAEC,KAAK,EAAE,EAAT;EAAaC,IAAI,EAAE,EAAnB;EAAuBC,OAAO,EAAE;AAAhC,CAArB;;AAEA,MAAMC,aAAa,GAAG,YAAkC;EAAA,IAAjCC,KAAiC,uEAAzBL,YAAyB;EAAA,IAAXM,MAAW;;EACtD,QAAQA,MAAM,CAACC,IAAf;IACE,KAAKR,KAAK,CAACS,SAAX;MACE,OAAO,EAAE,GAAGH,KAAL;QAAYJ,KAAK,EAAEK,MAAM,CAACG,OAA1B;QAAmCN;MAAnC,CAAP;;IACF;MACE,OAAOE,KAAP;EAJJ;AAMD,CAPD;;AASA,eAAeD,aAAf"},"metadata":{},"sourceType":"module"}